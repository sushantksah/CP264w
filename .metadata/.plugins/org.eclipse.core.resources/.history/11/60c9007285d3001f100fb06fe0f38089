/*
 * mychar.c
 *
 *  Created on: Jan. 15, 2025
 *      Author: sushantksah
 */
#include <ctype.h>
/**
 * Determine the type of a char character.
 *
 * @param c - char type
 * @return - 0 if c is a digit
             1 if c is an arithmetic operator
             2 if c is the left parenthsis (
             3 if c is the right parenthsis )
             4 if c is an English letter;
             otherwise -1.
 */
int mytype(char c){
	int r = -1;
	char leftpar = '(';
	char rightpar = ')';
	char validchars[] = "+-*/%\0";

	if(c >= '0' && c <='9')
		r = 0;

	//strchr checks if a character exits in a NULL-TERMINATED STRING
	else if(strchr(validchars, c))
		r = 1;

	else if(c == leftpar)
		r = 2;

	else if(c == rightpar)
		r = 3;

	// this line works because the complier tests their ASCII representations, and if the
	// characters are within the range it will return 1
	else if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) // || is the logical OR
		r = 4;


	return r;

}


/**
 * Flip the case of an English character.
 *
 * @param c - char type
 * @return -  c's upper/lower case letter if c is a lower/upper case English letter.
 */
char case_flip(char c) {
	char r;
	if (isupper(c)){
		r = tolower(c);
	}
	else if (islower(c)){
		r = toupper(c);
	}
	else {
		r = c;
	}

	return r;

}


/**
 * Convert digit character to the corresponding integer value.
 *
 * @param c - char type value
 * @return - its corresponding integer value if c is a digit character;
 *           otherwise -1.
 */
int digit_to_int(char c){

	if(c >= '0' && c <= '9'){
		int value = c - '0';
	}
	else{
		return -1;
	}

	return value;
}



